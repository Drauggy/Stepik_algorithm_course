package com.stepik.algo;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;

public class hardLIS {
    private void Run() throws IOException {
        try(BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)))
        {
            int n = Integer.parseInt(reader.readLine());

            int[] input = new int[n];
            String[] inputLine = reader.readLine().split(" ");
            for (int i = 0; i < n; i++) {
                input[i] = Integer.parseInt(inputLine[i]);
            }
            System.out.println(LISimpl(input));

        }

    }

    private int LISimpl(int[] input) {
        int n = input.length;
        int[] D = new int[n];
        D[0] = Integer.MAX_VALUE;
        for (int i = 1; i < n; i++) {
            D[i] = Integer.MIN_VALUE;
        }
        for (int i = 0; i < n; i++) {
            int j = (n + Arrays.binarySearch(D,input[i]))*-1;
            if (D[j - 1] > input[i] && input[i] > D[j]) {
                D[j] = input[i];
            }
        }
        System.out.println(Arrays.toString(D));
        return 0;
    }

    public static void main(String[] args) throws IOException {
        long start = System.currentTimeMillis();
        new hardLIS().Run();
        long end = System.currentTimeMillis();
        System.out.print(end - start);
        System.out.println(" ms");
    }
}
